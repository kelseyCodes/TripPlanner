// CSS3 Flexible Box Model and property defaults

//************************************************************************//
// New Flexbox 2012 Spec
// http://dev.w3.org/csswg/css3-flexbox/
//************************************************************************//
@mixin display($value) {
//  flex | inline-flex
  @if $value == "flex" {
    display: -webkit-flex;
    display: flex;
  } @else if $value == "inline-flex" {
    display: -webkit-inline-flex;
    display: inline-flex;
  } @else {
    display: $value;
  }
}

@mixin flex($value) {
  @include prefixer(flex, $value, webkit spec);
}

@mixin flex-direction($value: row) {
//  row | row-reverse | column | column-reverse
  @include prefixer(flex-direction, $value, webkit spec);
}

@mixin flex-wrap($value: nowrap) {
// nowrap | wrap | wrap-reverse
  @include prefixer(flex-wrap, $value, webkit spec);
}

@mixin flex-flow($value) {
// flex-direction || flex-wrap
  @include prefixer(flex-flow, $value, webkit spec);
}

@mixin order($int: 0) {
  @include prefixer(order, $int, webkit spec);
}

@mixin flex-grow($number: 0) {
  @include prefixer(flex-grow, $number, webkit spec);
}

@mixin flex-shrink($number: 1) {
  @include prefixer(flex-shrink, $number, webkit spec);
}

@mixin flex-basis($width: auto) {
  @include prefixer(flex-basis, $width, webkit spec);
}

@mixin justify-content($value: flex-start) {
// flex-start | flex-end | center | space-between | space-around
  @include prefixer(justify-content, $value, webkit spec);
}

@mixin align-items($value: stretch) {
// flex-start | flex-end | center | baseline | stretch
  @include prefixer(align-items, $value, webkit spec);
}

@mixin align-self($value: auto) {
// auto | flex-start | flex-end | center | baseline | stretch
  @include prefixer(align-self, $value, webkit spec);
}

@mixin align-content($value: stretch) {
// flex-start | flex-end | center | space-between | space-around | stretch
  @include prefixer(align-content, $value, webkit spec);
}